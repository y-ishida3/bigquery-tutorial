WITH calendar AS (
    SELECT
        date
        , DATE_SUB(date, INTERVAL 52 WEEK) AS week_52_ago
    FROM
        UNNEST(GENERATE_DATE_ARRAY('2023-01-01', '2024-11-01')) AS date
)

, mapping AS (
    SELECT
        *
    FROM
        calendar
        , UNNEST(['新規', '既存']) AS user_type
        , UNNEST(['pc', 'phone', 'tablet']) AS category
        , UNNEST(GENERATE_ARRAY(1, 6, 1)) AS day
        , UNNEST(GENERATE_ARRAY(100, 1100, 100)) AS `set`
)

, core AS (
    SELECT
        id
        , order_date
        , user_type
        , category
        , sales
        , day
        , `set`
    FROM
        `sample.purchase_history`
)

, ret AS (
    SELECT
        m.date
        , m.week_52_ago
        , m.user_type
        , m.category
        , m.day
        , m.set
        , ty.id AS this_year_id
        , ty.sales AS this_year_sales
        , ty.order_date AS this_year_order_date

        , ly.id AS last_year_id
        , ly.sales AS last_year_sales
        , ly.order_date AS last_year_order_date
    FROM
        mapping AS m
            LEFT OUTER JOIN core AS ty
                ON m.date = ty.order_date
                AND m.user_type = ty.user_type
                AND m.category = ty.category
                AND m.day = ty.day
                AND m.set = ty.set
            LEFT OUTER JOIN core AS ly
                ON m.week_52_ago = ly.order_date
                AND m.user_type = ly.user_type
                AND m.category = ly.category
                AND m.day = ly.day
                AND m.set = ly.set
)

SELECT * FROM ret;
-- SELECT
--     DATE_TRUNC(date, MONTH) AS month
--     , COUNT(DISTINCT IF(this_year_id IS NOT NULL, this_year_id, NULL))
--     , COUNT(DISTINCT IF(last_year_id IS NOT NULL, last_year_id, NULL))
-- FROM
--     ret
-- GROUP BY 1
-- ;